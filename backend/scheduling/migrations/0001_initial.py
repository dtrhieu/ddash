# Generated by Django 5.2.5 on 2025-08-29 02:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('campaign_type', models.CharField(choices=[('rig_campaign', 'Rig Campaign'), ('field_operations', 'Field Operations')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('field', models.ForeignKey(blank=True, help_text='Field reference for field operations', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='core.field')),
                ('rig', models.ForeignKey(blank=True, help_text='Rig reference for rig campaigns', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='core.rig')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('project_type', models.CharField(choices=[('drilling', 'Drilling'), ('workover', 'Workover'), ('plug_and_abandon', 'Plug And Abandon'), ('fracturing', 'Fracturing'), ('platform_service', 'Platform Service'), ('uwild', 'UWILD'), ('rig_overhaul', 'Rig Overhaul'), ('other', 'Other')], max_length=20)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('complete', 'Complete'), ('on_hold', 'On Hold'), ('canceled', 'Canceled')], default='planned', max_length=20)),
                ('planned_start', models.DateField()),
                ('planned_end', models.DateField()),
                ('actual_start', models.DateField(blank=True, null=True)),
                ('actual_end', models.DateField(blank=True, null=True)),
                ('dependencies', models.JSONField(blank=True, default=dict, help_text='Project dependencies as JSON')),
                ('extras', models.JSONField(blank=True, default=dict, help_text='Additional project metadata as JSON')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('field', models.ForeignKey(blank=True, help_text='Optional field reference; can be derived from platform/well', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.field')),
                ('platform', models.ForeignKey(blank=True, help_text='Platform reference for platform-tied projects', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.platform')),
                ('rig', models.ForeignKey(blank=True, help_text='Rig assignment; required for certain project types', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.rig')),
                ('well', models.ForeignKey(blank=True, help_text='Well reference for well-specific projects', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.well')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_projects', to='scheduling.campaign')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_projects', to='scheduling.project')),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenarios', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='campaign',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='scheduling.scenario'),
        ),
        migrations.CreateModel(
            name='CalcRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('params', models.JSONField(blank=True, default=dict, help_text='Calculation parameters as JSON')),
                ('results', models.JSONField(blank=True, default=dict, help_text='Calculation results as JSON')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calc_runs', to=settings.AUTH_USER_MODEL)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calc_runs', to='scheduling.scenario')),
            ],
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['name'], name='scheduling__name_4ff386_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['rig', 'planned_start'], name='scheduling__rig_id_2ef62c_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['platform', 'planned_start'], name='scheduling__platfor_ef66cd_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_type'], name='scheduling__project_dd697e_idx'),
        ),
        migrations.AddIndex(
            model_name='campaignproject',
            index=models.Index(fields=['campaign'], name='scheduling__campaig_004086_idx'),
        ),
        migrations.AddIndex(
            model_name='campaignproject',
            index=models.Index(fields=['project'], name='scheduling__project_5a4b7f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='campaignproject',
            unique_together={('campaign', 'project')},
        ),
        migrations.AddIndex(
            model_name='scenario',
            index=models.Index(fields=['name'], name='scheduling__name_dcd4c1_idx'),
        ),
        migrations.AddIndex(
            model_name='scenario',
            index=models.Index(fields=['status'], name='scheduling__status_19751a_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['name'], name='scheduling__name_2ffd63_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['scenario'], name='scheduling__scenari_c018d5_idx'),
        ),
        migrations.AddIndex(
            model_name='calcrun',
            index=models.Index(fields=['scenario'], name='scheduling__scenari_06b187_idx'),
        ),
        migrations.AddIndex(
            model_name='calcrun',
            index=models.Index(fields=['status'], name='scheduling__status_9b25fb_idx'),
        ),
        migrations.AddIndex(
            model_name='calcrun',
            index=models.Index(fields=['created_at'], name='scheduling__created_80a5f5_idx'),
        ),
    ]
